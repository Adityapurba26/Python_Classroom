{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mulai: 1\n",
      "Selesai: 28\n",
      "[ 1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24\n",
      " 25 26 27]\n",
      "[[ 1  2  3  4  5  6  7  8  9]\n",
      " [10 11 12 13 14 15 16 17 18]\n",
      " [19 20 21 22 23 24 25 26 27]]\n",
      "[[[ 1  2  3]\n",
      "  [ 4  5  6]\n",
      "  [ 7  8  9]]\n",
      "\n",
      " [[10 11 12]\n",
      "  [13 14 15]\n",
      "  [16 17 18]]\n",
      "\n",
      " [[19 20 21]\n",
      "  [22 23 24]\n",
      "  [25 26 27]]]\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "import random\n",
    "\n",
    "Mulai = input(\"Mulai: \")\n",
    "Mulai = int(Mulai[:])\n",
    "Selesai = input(\"Selesai: \")\n",
    "Selesai = int(Selesai[:])\n",
    "data1= np.arange(Mulai, Selesai, 1)\n",
    "d = {1,  2, 3}\n",
    "a =0\n",
    "\n",
    "while (a<4):\n",
    "    a=a+1\n",
    "    if(a==1): print(data1)\n",
    "    if(a==2):print(data1.reshape(3,9))\n",
    "    if(a==3):print(data1.reshape(3,3,3))\n",
    "    \n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Banyak Data: 16\n",
      "Mulai: 1\n",
      "Selesai: 50\n",
      "[6, 5, 44, 1, 31, 28, 28, 1, 25, 7, 43, 4, 18, 18, 19, 36]\n",
      "[[ 6  5 44  1]\n",
      " [31 28 28  1]\n",
      " [25  7 43  4]\n",
      " [18 18 19 36]]\n",
      "[[ 6 31 25 18]\n",
      " [ 5 28  7 18]\n",
      " [44 28 43 19]\n",
      " [ 1  1  4 36]]\n"
     ]
    }
   ],
   "source": [
    "import random\n",
    "banyak_data = input(\"Banyak Data: \")\n",
    "banyak_data = int(banyak_data[:])\n",
    "Mulai = input(\"Mulai: \")\n",
    "Mulai = int(Mulai[:])\n",
    "Selesai = input(\"Selesai: \")\n",
    "Selesai = int(Selesai[:])\n",
    "randomlist = []\n",
    "for i in range(banyak_data):\n",
    "    n = random.randint(Mulai,Selesai)\n",
    "    randomlist.append(n)\n",
    "\n",
    "print(randomlist)\n",
    "data_array2=np.array(randomlist)\n",
    "data_array2=data_array2.reshape(4,4)\n",
    "print(data_array2)\n",
    "data_transpose=data_array2.T\n",
    "print(data_transpose)\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Soal 3\n",
    "Buatlah sebuah array 2 dimensi dengan ukuran 10 x 10! Isi dari array tersebut adalah:\n",
    "• Sisi luarnya merupakan angka 4.\n",
    "• Selain sisi luar, angka yang ditampilkan adalah 0."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[4., 4., 4., 4., 4., 4., 4., 4., 4., 4.],\n",
       "       [4., 0., 0., 0., 0., 0., 0., 0., 0., 4.],\n",
       "       [4., 0., 0., 0., 0., 0., 0., 0., 0., 4.],\n",
       "       [4., 0., 0., 0., 0., 0., 0., 0., 0., 4.],\n",
       "       [4., 0., 0., 0., 0., 0., 0., 0., 0., 4.],\n",
       "       [4., 0., 0., 0., 0., 0., 0., 0., 0., 4.],\n",
       "       [4., 0., 0., 0., 0., 0., 0., 0., 0., 4.],\n",
       "       [4., 0., 0., 0., 0., 0., 0., 0., 0., 4.],\n",
       "       [4., 0., 0., 0., 0., 0., 0., 0., 0., 4.],\n",
       "       [4., 4., 4., 4., 4., 4., 4., 4., 4., 4.]])"
      ]
     },
     "execution_count": 88,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x=np.ones((10,10))*4\n",
    "x[1:-1,1:-1]=0\n",
    "#x[1:9,1:9]\n",
    "x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
